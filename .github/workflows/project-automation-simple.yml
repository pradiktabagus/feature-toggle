name: Simple Project Automation

on:
  issues:
    types: [opened]
  pull_request:
    types: [opened]

jobs:
  auto-assign-labels:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'opened'
    steps:
      - name: Auto-assign phase labels
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const body = issue.body || '';
            
            // Extract phase from issue body
            const phaseMatch = body.match(/\*\*Phase:\*\*\s*\(?(Phase\s*[2-5])/i);
            if (phaseMatch) {
              const phase = phaseMatch[1].toLowerCase().replace(/\s+/g, '-');
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: [phase]
              });
            }
            
            // Extract priority from issue body
            const priorityMatch = body.match(/\*\*Priority:\*\*\s*\(?(High|Medium|Low)/i);
            if (priorityMatch) {
              const priority = priorityMatch[1].toLowerCase();
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: [`priority-${priority}`]
              });
            }

  notify-project:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'opened' || github.event_name == 'pull_request' && github.event.action == 'opened'
    steps:
      - name: Comment with project link
        uses: actions/github-script@v7
        with:
          script: |
            const projectUrl = 'https://github.com/users/pradiktabagus/projects/5';
            const itemType = context.eventName === 'issues' ? 'issue' : 'pull request';
            const message = `ðŸš€ This ${itemType} has been created! Please add it to the [project board](${projectUrl}) manually.`;
            
            if (context.eventName === 'issues') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                body: message
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: message
              });
            }